"""
A. ùëò -—è –∏–º–ø–µ—Ä—Å–∫–∞—è –ø–æ—Ä—è–¥–∫–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ç–µ—Å—Ç: 1.2 —Å–µ–∫—É–Ω–¥
–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –ø–∞–º—è—Ç–∏ –Ω–∞ —Ç–µ—Å—Ç: 256 –º–µ–≥–∞–±–∞–π—Ç
–≤–≤–æ–¥: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–≤–æ–¥
–≤—ã–≤–æ–¥: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥

–ë–∞—Ç–∞–ª—å–æ–Ω –∫–ª–æ–Ω–æ–≤ –≤—ã—à–µ–ª –Ω–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ. –í—Å–µ –∏–º–ø–µ—Ä—Ü—ã —Å—Ç–∞–ª–∏ –≤ –æ–¥–∏–Ω —Ä—è–¥ –∏ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–ª–∏—Å—å: –ø–µ—Ä–≤—ã–π, –≤—Ç–æ—Ä–æ–π, —Ç—Ä–µ—Ç–∏–π, ‚Ä¶, ùëõ-–π.
–ö–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –¥–µ—Ä–∂–∏—Ç –≤ —Ä—É–∫–∞—Ö –±—É–º–∞–∂–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–≤–æ–µ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è IQ.
–ö–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è IQ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10^9.

–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –∫ –±–∞—Ç–∞–ª—å–æ–Ω—É –ø–æ–¥—Ö–æ–¥–∏—Ç –≥—Ä–∞—Ñ –î—É–∫–æ, —Ä–∞–∑–º–∞—Ö–∏–≤–∞–µ—Ç –º–µ—á–æ–º –∏ –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å:
¬´–ï—Å–ª–∏ –≤—Å–µ—Ö –∫–ª–æ–Ω–æ–≤ —Å ùëñ-–≥–æ –ø–æ ùëó-–≥–æ —É–ø–æ—Ä—è–¥–æ—á–∏—Ç—å –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É —Ç–µ—Å—Ç–∞, —Ç–æ –∫–∞–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç —É –∫–ª–æ–Ω–∞,
—Å—Ç–æ—è—â–µ–º –Ω–∞ ùëò-–º –º–µ—Å—Ç–µ?¬ª ‚Äî –∏ –±—ã—Å—Ç—Ä–æ —Ç—Ä–µ–±—É–µ—Ç –æ—Ç–≤–µ—Ç, –≥—Ä–æ–∑—è –≤—Å—é –ø–∞—Ä—Ç–∏—é –ø—É—Å—Ç–∏—Ç—å –≤ —Ä–∞—Å—Ö–æ–¥.
–ë–æ–ª—å—à–∞—è –ø—Ä–æ—Å—å–±–∞ ‚Äî —Ä–µ—à–∏—Ç–µ —ç—Ç—É –∑–∞–¥–∞—á—É –∏ –ø–æ–º–æ–≥–∏—Ç–µ –∫–ª–æ–Ω–∞–º –≤—ã–∂–∏—Ç—å.

–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ùëõ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–æ–Ω–æ–≤ (1‚â§ùëõ‚â§1000).
–í–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è —ç—Ç–∏ ùëõ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏. –ß–∏—Å–ª–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 1 –¥–æ 10^9.
–í —Ç—Ä–µ—Ç—å–µ–π —Å—Ç—Ä–æ–∫–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è —á–∏—Å–ª–æ ùëö ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ (1‚â§ùëö‚â§10^5).
–ü–æ—Å–ª–µ–¥–Ω–∏–µ ùëö —Å—Ç—Ä–æ–∫ —Å–æ–¥–µ—Ä–∂–∞—Ç –∑–∞–ø—Ä–æ—Å—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´ùëñ ùëó ùëò¬ª.
–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –∑–∞–ø—Ä–æ—Å—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã, —Ç–æ –µ—Å—Ç—å 1‚â§ùëñ‚â§ùëó‚â§ùëõ –∏ –Ω–∞ –æ—Ç—Ä–µ–∑–∫–µ –æ—Ç ùëñ-–≥–æ –¥–æ ùëó-–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ
–µ—Å—Ç—å —Ö–æ—Ç—è –±—ã ùëò —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–ù–∞ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å –≤—ã–≤–µ–¥–∏—Ç–µ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ ‚Äî –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å.

–ü—Ä–∏–º–µ—Ä
–≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
5
1 3 2 4 5
3
1 3 2
1 5 1
1 5 2
–≤—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
2
1
2

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ
–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫ k-–æ–π –ø–æ—Ä—è–¥–∫–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ñ–∞–π–ª–æ–≤—ã–π –≤–≤–æ–¥-–≤—ã–≤–æ–¥ –≤ —ç—Ç–æ–π –∑–∞–¥–∞—á–µ.
"""
from random import randint


def partition(a: list, left_ind: int, right_ind: int):
    """–†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏, —Å –±–æ–ª—å—à–∏–º–∏ –∏ –º–µ–Ω—å—à–∏–º–∏, —á–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π, —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏.

    :param a: list - –º–∞—Å—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
    :param left_ind: int - –Ω–∞—á–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å–∏–≤–∞
    :param right_ind: int - –∫–æ–Ω–µ—á–Ω—ã–π –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å–∏–≤–∞
    :return: (list, int) - (–º–∞—Å—Å–∏–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–∞–∫, —á—Ç–æ a[0],...,a[p-1] < a[p] –∏ a[p+1],...,a[n-1]>=a[p],
    –∏–Ω–¥–µ–∫—Å —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞)
    """
    p = randint(left_ind, right_ind)
    a[p], a[right_ind] = a[right_ind], a[p]
    b = left_ind
    has_two_parts = False
    for i in range(left_ind, right_ind):
        if a[i] < a[right_ind]:
            has_two_parts = True
            a[i], a[b] = a[b], a[i]
            b += 1
        elif a[i] > a[right_ind]:
            has_two_parts = True
    if b == left_ind and not has_two_parts:
        b = (left_ind + right_ind) // 2
    a[right_ind], a[b] = a[b], a[right_ind]

    return a, b


def get_element_at_k(a: list, k: int,  left_ind: int, right_ind: int) -> int:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç k-—é –ø–æ—Ä—è–¥–∫–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –º–∞—Å—Å–∏–≤–∞ a.

    :param a: list - –º–∞—Å—Å–∏–≤, —á–∞—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–≥–æ —Å left_ind –ø–æ right_ind –Ω–∞–¥–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
    :param k: int - –ø–æ–∑–∏—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ –≤–µ—Ä–Ω—É—Ç—å
    :param left_ind: int - –Ω–∞—á–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞
    :param right_ind: int - –∫–æ–Ω–µ—á–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –º–∞—Å—Å–∏–≤–∞
    :return: int - —ç–ª–µ–º–µ–Ω—Ç, —Å—Ç–æ—è—â–∏–π –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ k –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ–¥–º–∞—Å—Å–∏–≤–µ a[left_ind:right_ind]
    """
    if right_ind < left_ind + 1:
        return a[k]

    a, p = partition(a, left_ind, right_ind)

    if k < p:
        return get_element_at_k(a, k, left_ind, p - 1)
    elif k > p:
        return get_element_at_k(a, k, p + 1, right_ind)
    else:
        return a[k]


def main():
    n = int(input())
    a = list(map(int, input().split()))
    m = int(input())
    for _ in range(m):
        a_copy = a.copy()
        i, j, k = map(int, input().split())
        k = k + i - 1
        print(get_element_at_k(a_copy, k - 1, i - 1, j - 1))


if __name__ == "__main__":
    main()
