"""
D. –ì—Ä–∏—à–∞ –ø–æ—Å–ª–µ –¥–∏—Å–∫–æ—Ç–µ–∫–∏

–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ç–µ—Å—Ç: 2 —Å–µ–∫—É–Ω–¥—ã
–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –ø–∞–º—è—Ç–∏ –Ω–∞ —Ç–µ—Å—Ç: 512 –º–µ–≥–∞–±–∞–π—Ç
–≤–≤–æ–¥: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–≤–æ–¥
–≤—ã–≤–æ–¥: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥

–ù–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –ø–æ—Å–ª–µ –¥–∏—Å–∫–æ—Ç–µ–∫–∏ –ì—Ä–∏—à–∞ —Ä–µ—à–∏–ª —É—Å—Ç—Ä–æ–∏—Ç—å –¥–µ—Ç—è–º ¬´–≤–∑—Ä—ã–≤ –º–æ–∑–≥–∞¬ª.
–û–Ω –≤–∑—è–ª –º–Ω–æ–≥–æ –∫–∞—Ä—Ç–æ—á–µ–∫ –∏ –Ω–∞–ø–∏—Å–∞–ª –Ω–∞ –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö –æ–¥–Ω—É –ª–∞—Ç–∏–Ω—Å–∫—É—é –±—É–∫–≤—É –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
–ê –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø—Ä–∏–¥—É–º–∞–ª —Å–≤–æ—é —Å—Ç—Ä–æ–∫—É –∏ –∑–∞–¥–∞–ª –¥–µ—Ç—è–º –∑–∞–¥–∞–Ω–∏–µ: —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ –±–æ–ª—å—à–µ –ø–æ–¥—Å—Ç—Ä–æ–∫ —Å–≤–æ–µ–π —Å—Ç—Ä–æ–∫–∏,
–∏—Å–ø–æ–ª—å–∑—É—è –∫–∞—Ä—Ç–æ—á–∫–∏.
–ì—Ä–∏—à–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
–í–∞–º –Ω—É–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∫–æ–ª—å–∫–æ –µ—ë –ø–æ–¥—Å—Ç—Ä–æ–∫ –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏.

–ó–∞–ø–∏—à–µ–º –±—É–∫–≤—ã, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö, –ø–æ–¥—Ä—è–¥ –¥—Ä—É–≥ –∑–∞ –¥—Ä—É–≥–æ–º.
–¢–æ–≥–¥–∞ –µ—Å–ª–∏ –ì—Ä–∏—à–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∞ ‚Äî —ç—Ç–æ ¬´aaab¬ª, –∞ –∫–∞—Ä—Ç–æ—á–∫–∏ ‚Äî —ç—Ç–æ ¬´aba¬ª, —Ç–æ –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Ç—Ä–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ ¬´a¬ª,
–ø–æ–¥—Å—Ç—Ä–æ–∫—É ¬´b¬ª, –¥–≤–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ ¬´aa¬ª –∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ ¬´ab¬ª –∏ ¬´aab¬ª.
–ê –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ ¬´aaa¬ª –∏ ¬´aaab¬ª –Ω–µ–ª—å–∑—è, —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å –≤—Å–µ–≥–æ –¥–≤–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –±—É–∫–≤–æ–π ¬´a¬ª.

–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ ùëõ –∏ ùëö (1‚â§ùëõ,ùëö‚â§10^5) ‚Äî –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –ì—Ä–∏—à–∏ –∏ –¥–ª–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ –∫–∞—Ä—Ç–æ—á–µ–∫.
–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç –ì—Ä–∏—à–∏–Ω—É —Å—Ç—Ä–æ–∫—É ùë† –¥–ª–∏–Ω—ã ùëõ, —Å–æ—Å—Ç–æ—è—â—É—é —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞
–≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
–¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç—Ä–æ–∫—É –∫–∞—Ä—Ç–æ—á–µ–∫ ùë° –¥–ª–∏–Ω—ã ùëö, —Å–æ—Å—Ç–æ—è—â—É—é —Ç–æ–ª—å–∫–æ –∏–∑ –±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞
–≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í—ã–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Å—Ç—Ä–æ–∫ –≤ ùë†, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ —Å—Ç—Ä–æ–∫–∏ ùë°.

–ü—Ä–∏–º–µ—Ä 1
–≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
4 3
aaab
aba
–≤—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
8
–ü—Ä–∏–º–µ—Ä 2
–≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
7 3
abacaba
abc
–≤—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
15
"""
FIRST_LETTER = ord('a')
LAST_LETTER = ord('z')
CNT_ARRAY_LEN = LAST_LETTER - FIRST_LETTER + 1


def get_count_array(a: str) -> list:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞–º–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏

    –°–∏–º–≤–æ–ª—ã –≤ –º–∞—Å—Å–∏–≤–µ —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç—Å—è –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –æ—Ç 'a' –¥–æ 'z'
    :param a: str - —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∏–º –º–∞—Å—Å–∏–≤
    :return: list - –º–∞—Å—Å–∏–≤, —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —è–≤–ª—è—é—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    """
    cnt_a = [0] * CNT_ARRAY_LEN
    for el in a:
        cnt_a[ord(el) - FIRST_LETTER] += 1

    return cnt_a


def get_all_substring_count(n: int) -> int:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–æ–¥—Å—Ç—Ä–æ–∫ —Å—Ç—Ä–æ–∫–∏ –¥–ª–∏–Ω—ã n

    :param n: int - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π —Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Å—Ç—Ä–æ–∫
    :return: int - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–æ–¥—Å—Ç—Ä–æ–∫ —Å—Ç—Ä–æ–∫–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã
    """
    substr_cnt = n * (n + 1) // 2

    return substr_cnt


def get_substring_count(s: str, n: int, t: str) -> int:
    """–°—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Å—Ç—Ä–æ–∫ –≤ —Å—Ç—Ä–æ–∫–µ s, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ —Å—Ç—Ä–æ–∫–∏-"—Å–ª–æ–≤–∞—Ä—è" t

    :param s: str - —Å—Ç—Ä–æ–∫–∞ –∏–∑ –∫–æ—Ç–æ—Ä–æ–π —Å–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
    :param n: int - –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ s
    :param t: str - —Å—Ç—Ä–æ–∫–∞-"—Å–ª–æ–≤–∞—Ä—å"
    :return: int - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Å—Ç—Ä–æ–∫ –≤ s, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ —Å—Ç—Ä–æ–∫–∏-"—Å–ª–æ–≤–∞—Ä—è" t
    """
    substring_cnt = 0
    cnt_t = get_count_array(t)
    intersection_lng = 0  # –¥–ª–∏–Ω–∞ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è —Å —É–∂–µ —É—á—Ç–µ–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π
    current_substring_lng = 0  # –¥–ª–∏–Ω–∞ —Ç–µ–∫—É—â–µ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
    i = 0
    j = 0

    while i < n:
        if j < i:
            j = i
        if j == n:
            break
        while j < n:
            # –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Å–∏–º–≤–æ–ª s[j] –µ—Å—Ç—å –≤ "—Å–ª–æ–≤–∞—Ä–µ" - —É–¥–∞–ª–∏–º –µ–≥–æ –∏–∑ —Å–ª–æ–≤–∞—Ä—è –∏ –¥–æ–±–∞–≤–∏–º –≤ —Ç–µ–∫—É—â—É—é –ø–æ–¥—Å—Ç—Ä–æ–∫—É
            if cnt_t[ord(s[j]) - FIRST_LETTER] > 0:
                cnt_t[ord(s[j]) - FIRST_LETTER] -= 1
                current_substring_lng += 1
                j += 1
            else:
                # –µ—Å–ª–∏ s[j] –Ω–µ—Ç –≤ "—Å–ª–æ–≤–∞—Ä–µ" - —É–≤–µ–ª–∏—á–∏–º —Ü–µ–ª–µ–≤–æ–π —Å—á–µ—Ç—á–∏–∫ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–æ–¥—Å—Ç—Ä–æ–∫ —Ç–µ–∫—É—â–µ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏
                # –∏ —É–º–µ–Ω—å—à–∏–º —Ü–µ–ª–µ–≤–æ–π —Å—á–µ—Ç—á–∏–∫ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Å—Ç—Ä–æ–∫ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π —É—á—Ç–µ–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–æ–π
                lng = current_substring_lng
                substring_cnt += get_all_substring_count(lng)
                substring_cnt -= get_all_substring_count(intersection_lng)
                intersection_lng = max(0, lng - 1)
                if lng > 0:
                    current_substring_lng -= 1
                    first_el = s[i]
                    cnt_t[ord(first_el) - FIRST_LETTER] += 1
                break
            # –µ—Å–ª–∏ –¥–æ—à–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏ - —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ü–µ–ª–µ–≤–æ–π —Å—á–µ—Ç—á–∏–∫ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø–æ–¥—Å—á–µ—Ç
            if j == n:
                lng = current_substring_lng
                substring_cnt += get_all_substring_count(lng)
                substring_cnt -= get_all_substring_count(intersection_lng)
        i += 1

    return substring_cnt


def main():
    n, m = map(int, input().split())
    s = input()
    t = input()
    print(get_substring_count(s, n, t))


if __name__ == "__main__":
    main()
