"""
C. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω–≤–µ—Ä—Å–∏–π

–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ç–µ—Å—Ç: 5 —Å–µ–∫—É–Ω–¥
–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –ø–∞–º—è—Ç–∏ –Ω–∞ —Ç–µ—Å—Ç: 256 –º–µ–≥–∞–±–∞–π—Ç
–≤–≤–æ–¥: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–≤–æ–¥
–≤—ã–≤–æ–¥: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ ùê¥=‚ü®ùëé1,ùëé2,‚Ä¶,ùëéùëõ‚ü© –Ω–∞—Ö–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä (ùëñ,ùëó) —Ç–∞–∫–∏—Ö, —á—Ç–æ ùëñ<ùëó –∏ ùëéùëñ>ùëéùëó.

–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –≤—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ ùëõ (1‚â§ùëõ‚â§500000) ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞.
–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç ùëõ –ø–æ–ø–∞—Ä–Ω–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ ùê¥ (0‚â§ùëéùëñ‚â§10^6).
–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
–í –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª –≤—ã–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ —á–∏—Å–ª–æ ‚Äî –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞—á—É.

–ü—Ä–∏–º–µ—Ä 1
–≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
4
1 2 4 5
–≤—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
0

–ü—Ä–∏–º–µ—Ä 2
–≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
4
5 4 2 1
–≤—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
6
"""
from math import floor


def merge_array(a: list, st: int, m: int, fin: int, inv_cnt: int):
    """–û–±–º–µ–Ω–Ω–æ–µ —Å–ª–∏—è–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤ —Å –ø–æ–¥—Å—á–µ—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–Ω–≤–µ—Ä—Å–∏–π.

    :param a: list - –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å–æ–¥–µ—Ä–∂–∞—Ç—Å—è –¥–≤–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Å—Ç–∏, –æ–¥–Ω–∞ –∑–∞ –¥—Ä—É–≥–æ–π
    :param st: int - –∏–Ω–¥–µ–∫—Å –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–µ—Ä–≤–æ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —á–∞—Å—Ç–∏
    :param m: int - –∏–Ω–¥–µ–∫—Å –∫–æ–Ω–µ—á–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–µ—Ä–≤–æ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —á–∞—Å—Ç–∏
    :param fin: int - –∏–Ω–¥–µ–∫—Å –∫–æ–Ω–µ—á–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤—Ç–æ—Ä–æ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —á–∞—Å—Ç–∏
    :param inv_cnt: int - —Å—á–µ—Ç—á–∏–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–Ω–≤–µ—Ä—Å–∏–π
    :return: tuple (list, int) - (–º–∞—Å—Å–∏–≤ a, —Å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ a[st],...,a[m], —Å—á–µ—Ç—á–∏–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–Ω–≤–µ—Ä—Å–∏–π)
    """
    c = [None] * (fin - st + 1)
    for k in range(st, fin + 1):
        c[k - st] = a[k]
    i = 0
    c_m = m - st + 1  # –Ω–∞—á–∞–ª–æ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞
    c_fin = fin - st  # –∫–æ–Ω–µ—Ü –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞
    j = c_m
    for k in range(st, fin + 1):
        if i >= c_m:  # –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –ø–µ—Ä–≤—ã–π –ø–æ–¥–º–∞—Å—Å–∏–≤
            a[k] = c[j]
            j += 1
        elif j > c_fin:  # –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –≤—Ç–æ—Ä–æ–π –ø–æ–¥–º–∞—Å—Å–∏–≤
            a[k] = c[i]
            i += 1
        elif c[i] <= c[j]:  # —ç–ª–µ–º–µ–Ω—Ç –ø–µ—Ä–≤–æ–≥–æ –º–µ–Ω—å—à–µ
            a[k] = c[i]
            i += 1
        else:  # —ç–ª–µ–º–µ–Ω—Ç –≤—Ç–æ—Ä–æ–≥–æ –º–µ–Ω—å—à–µ
            a[k] = c[j]
            j += 1
            inv_cnt += c_m - i  # –∑–¥–µ—Å—å –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫
    return a, inv_cnt


def merge_sort(a: list, st: int, fin: int, inv_cnt: int):
    """–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ª–∏—è–Ω–∏–µ–º —Å –ø–æ–¥—Å—á–µ—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–Ω–≤–µ—Ä—Å–∏–π.

    :param a: list - –º–∞—Å—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–¥–æ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
    :param st: int - –∏–Ω–¥–µ–∫—Å –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    :param fin: int - –∏–Ω–¥–µ–∫—Å –∫–æ–Ω–µ—á–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    :param inv_cnt: int - —Å—á–µ—Ç—á–∏–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–Ω–≤–µ—Ä—Å–∏–π
    :return: tuple (list, int) - (–º–∞—Å—Å–∏–≤ a, —Å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –≤ –ø–æ—Ä—è–¥–∫–µ –Ω–µ—É–±—ã–≤–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ a[st],...,a[fin],
    —Å—á–µ—Ç—á–∏–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–Ω–≤–µ—Ä—Å–∏–π)
    """
    if st < fin:
        m = st + floor((fin - st) / 2)
        a, inv_cnt = merge_sort(a, st, m, inv_cnt)
        a, inv_cnt = merge_sort(a, m + 1, fin, inv_cnt)
        if a[m] > a[m + 1]:
            a, inv_cnt = merge_array(a, st, m, fin, inv_cnt)
    return a, inv_cnt


def main():
    n = int(input())
    a = list(map(int, input().split()))
    result = merge_sort(a, 0, n - 1, 0)
    print(result[1])


if __name__ == "__main__":
    main()
